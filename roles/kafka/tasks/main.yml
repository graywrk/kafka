- name: Install Java
  apt:
    name: openjdk-11-jdk
    state: present
    update_cache: yes

- name: Create Kafka group
  group:
    name: "{{ kafka_group }}"
    state: present

- name: Create Kafka user
  user:
    name: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    shell: /bin/bash
    system: yes

- name: Download Kafka
  get_url:
    url: "https://downloads.apache.org/kafka/{{ kafka_version }}/kafka_{{ scala_version }}-{{ kafka_version }}.tgz"
    dest: "/tmp/kafka_{{ scala_version }}-{{ kafka_version }}.tgz"

- name: Create Kafka directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0750'
  loop:
    - "{{ kafka_home }}"
    - "{{ kafka_data_dir }}"
    - "{{ kafka_log_dir }}"

- name: Extract Kafka
  unarchive:
    src: "/tmp/kafka_{{ scala_version }}-{{ kafka_version }}.tgz"
    dest: "{{ kafka_home }}"
    remote_src: yes
    extra_opts: "--strip-components=1"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"

- name: Create ZooKeeper data directory
  file:
    path: "{{ kafka_data_dir }}/zookeeper"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0750'

- name: Create ZooKeeper myid file
  copy:
    content: "{{ zookeeper_id }}"
    dest: "{{ kafka_data_dir }}/zookeeper/myid"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0644'

- name: Configure ZooKeeper properties
  template:
    src: zookeeper.properties.j2
    dest: "{{ kafka_home }}/config/zookeeper.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  notify: restart zookeeper

- name: Configure Kafka server properties
  template:
    src: server.properties.j2
    dest: "{{ kafka_home }}/config/server.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  notify: restart kafka

- name: Create ZooKeeper systemd service
  template:
    src: zookeeper.service.j2
    dest: /etc/systemd/system/zookeeper.service
  notify: restart zookeeper

- name: Create Kafka systemd service
  template:
    src: kafka.service.j2
    dest: /etc/systemd/system/kafka.service
  notify: restart kafka

- name: Start and enable ZooKeeper service
  systemd:
    name: zookeeper
    state: started
    enabled: yes
    daemon_reload: yes

- name: Start and enable Kafka service
  systemd:
    name: kafka
    state: started
    enabled: yes
    daemon_reload: yes
